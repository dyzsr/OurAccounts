Title: 移动互联网技术与应用
Subtitle: Android记账软件开发报告
Author: 董岩
Email: 2016211225
Author: 倪理涵
Email: 2016211156

[TITLE]

# 系统开发的创意与背景



# 相关技术

* Javascript（ES2016版本）
* NodeJS，基于V8引擎的JS运行环境，通常用于后端和界面的开发
* React，一套用于编写UI的JS类库
* React-Native，一套使用React开发移动端本地应用的框架
* Redux，一个提供可预测程序状态的JS容器
* React-Redux，一套React和Redux相结合的框架

# 系统功能需求

这个软件主要的功能需求有记账、统计和账目的稳定保存。

## 记账功能

记账功能需要保存具体的账目信息。一条账目具体需要保存：

* 交易时间（年月日时分）
* 交易类型（收入/支出）
* 交易项目（购物、餐饮、教育……）
* 交易金额
* 对这条交易的描述（具体消费了什么……）
* 与交易相关的图片（可以有多张）
* 交易地点（可以自动获取当前位置）

记账功能要有以下用例：

* 增添新的账单条目
    * 新添的账目初始化为默认值
* 修改已有账单条目
    * 修改交易时间
    * 修改交易类型
    * 修改交易项目
    * 修改交易金额
    * 修改对交易的描述
    * 添加或删除交易相关的图片
    * 修改交易发生的地点
* 删除一条账单条目

## 统计功能

统计功能要求能够对一段时间内的交易信息加以整理，然后以较为直观的形式呈现出来。

呈现的形式分为两部分，一部分是文字信息，以列表和数字的形式呈现；另一部分是可视化信息，
以图表的形式呈现。

统计功能有以下用例：

* 查看指定月份的收入和支出总额
    * 统计一个月的收入总额
    * 统计一个月的支出总额
* 查看某一日的具体交易信息
    * 列表显示当日的所有账单
* 查看指定月份的支出和收入类别占比
    * 图表显示当月支出中各类别的占比
    * 图表显示当月收入中各类别的占比

## 账目保存功能

账目保存功能要求做到账目数据的可持久化保存，数据要在软件停止运行后稳定的存储在手机中。

唯一需要保存的数据是所有的账目，因为统计信息可以依据账目信息动态生成，不需要可持久地
存储在手机上。

# 系统设计与实现

## 系统总体设计

我们将记账软件在功能上分为四个模块：记账模块、列表统计模块、图表统计模块、和云端数据同步模块。

在软件结构上分为容器和视图两个部分，利用redux框架，视图部分负责显示和交互，容器部分存储软件
数据，通过接收视图传来的信号，对数据进行同步更新。

## 系统物理分布

系统总体目录结构：

```
OurAccounts
├── android
│   ├── app
│   ├── build
│   ├── gradle
│   ├── keystores
│   ├── build.gradle
│   ├── gradle.properties
│   ├── gradlew
│   ├── gradlew.bat
│   ├── local.properties
│   ├── OurAccounts.iml
│   └── settings.gradle
├── node_modules
├── src
│   ├── models
│   ├── views
│   ├── App.js
│   └── reducer.js
├── __tests__
│   └── App-test.js
├── app.json
├── babel.config.js
├── index.js
├── metro.config.js
├── package.json
├── yarn-error.log
└── yarn.lock
```

`index.js`是主体程序的入口，其余的源代码都存放在`src`文件夹中。`android`文件夹保存Android
项目信息，主要是React-Native框架自动生成的代码和配置文件。

`src/views`目录保存各组件的视图界面代码；`src/models`目录保存各组件数据的容器代码；
`src/reducer.js`保存Redux框架中程序的总数据容器；`src/App.js`将数据容器与视图部分结合。

## 模块设计

### 记账模块

### 列表统计模块



### 图表统计模块

### 云端书记同步模块


# 系统可能的拓展


# 总结体会